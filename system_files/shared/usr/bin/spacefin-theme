#!/usr/bin/env python3
import sys
import subprocess
import tempfile
import shutil
import os

# Configuration
REPO_URL = "https://github.com/ExistingPerson08/Spacefin-themes.git"
REPO_FOLDER_NAME = "Spacefin-themes"
CONFIG_DIR = os.path.expanduser("~/.config/cosmic/")
THEMES = ["Spacefin", "Cosmic"]


def list_themes():
    """Prints the help message."""
    print("\nAvailable themes:")
    for theme in THEMES:
        print(f"  - {theme}")


def main():
    # Check if theme name was provided
    if len(sys.argv) != 2:
        print(f"Error: You must provide a theme name.")
        print(f"Usage: spacefin-theme <theme_name>")
        list_themes()
        sys.exit(1)

    theme_name = sys.argv[1]

    # Check if provided theme name is in THEMES
    if theme_name not in THEMES:
        print(f"‚ö†Ô∏è Warning: '{theme_name}' is not in the known list of themes.")
        print("Please check the name and try again.")
        list_themes()
        sys.exit(1)

    print(f"üîÑ Attempting to set theme: {theme_name}")

    # Create temporary directory
    with tempfile.TemporaryDirectory() as temp_dir:
        clone_path = os.path.join(temp_dir, REPO_FOLDER_NAME)
        print(f"üåç Cloning repository from {REPO_URL}...")

        # Clone repository using git
        try:
            subprocess.run(
                ["git", "clone", "--depth", "1", REPO_URL, clone_path],
                check=True,  # If git fails, raise an error
                capture_output=True,  # Capture output to hide it
                text=True,
            )
        except FileNotFoundError:
            print(
                f"‚ùå ERROR: 'git' command not found. Please make sure git is installed."
            )
            sys.exit(1)
        except subprocess.CalledProcessError as e:
            print(f"‚ùå ERROR: Failed to clone repository.")
            print(e.stderr)  # Print the error from git
            sys.exit(1)

        # Define paths
        source_dir = os.path.join(clone_path, theme_name)
        dest_dir = CONFIG_DIR

        # Check if the provided theme exists in the repository
        if not os.path.isdir(source_dir):
            print(f"‚ùå ERROR: Theme '{theme_name}' not found in the repository.")
            print("Please file an issue in our Github repo.")
            sys.exit(1)

        os.makedirs(dest_dir, exist_ok=True)

        # Copy files
        print(f"üìÇ Copying files from '{theme_name}' to '{dest_dir}'...")
        try:
            shutil.copytree(source_dir, dest_dir, dirs_exist_ok=True)
            print(f"üéâ Done! Theme '{theme_name}' has been successfully applied.")

            try:
                subprocess.run(
                    ["killall", "cosmic-panel"],
                    check=True,
                    capture_output=True,
                    text=True,
                )
            except FileNotFoundError:
                print(
                    f"‚ö†Ô∏è Warning: 'killall' command not found. Could not restart cosmic-panel."
                )
            except subprocess.CalledProcessError as e:
                print(
                    f"Error while restarting Cosmic, please log out and log in to prevent issues."
                )
                if e.stderr:
                    print(f"   Details: {e.stderr.strip()}")

        except TypeError:
            print("‚ùå ERROR: Your Python version is too old.")
            print("This script requires Python 3.8 or newer.")
            sys.exit(1)
        except Exception as e:
            print(f"‚ùå ERROR: Failed to copy files.")
            print(e)
            sys.exit(1)


if __name__ == "__main__":
    main()
